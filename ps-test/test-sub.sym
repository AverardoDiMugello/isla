(formulas
  (declare-const v0 (_ BitVec 2))
  (declare-const v1 (_ BitVec 1))
  (declare-const v2 (_ BitVec 1))
  (declare-const v3 (_ BitVec 1))
  (declare-const v4 (_ BitVec 1))
  (declare-const v5 (_ BitVec 1))
  (declare-const v6 (_ BitVec 1))
  (declare-const v7 (_ BitVec 2))
  (declare-const v8 (_ BitVec 1))
  (declare-const v9 (_ BitVec 1))
  (declare-const v10 (_ BitVec 1))
  (declare-const v11 (_ BitVec 1))
  (declare-const v12 (_ BitVec 1))
  (declare-const v13 (_ BitVec 1))
  (declare-const v14 (_ BitVec 1))
  (declare-const v15 (_ BitVec 1))
  (declare-const v16 (_ BitVec 1))
  (declare-const v17 (_ BitVec 1))
  (declare-const v18 (_ BitVec 5))
  (declare-const v19 (_ BitVec 1))
  (declare-const v20 (_ BitVec 4))
  (declare-const v21 (_ BitVec 8))
  (declare-const v22 (_ BitVec 1))
  (declare-const v23 (_ BitVec 1))
  (declare-const v24 (_ BitVec 1))
  (declare-const v25 (_ BitVec 1))
  (declare-const v26 (_ BitVec 64))
  (define-const v27 (bvor v26 #x000000000000ffff))
  (declare-const v28 (_ BitVec 64))
  (declare-const v29 (_ BitVec 64))
  (define-const v30 (eq v8 #b0))
  (assert v30)
  (declare-const v31 (_ BitVec 64))
  (define-const v32 ((_ extract 63 0) v31))
  (declare-const v33 (_ BitVec 4))
  (declare-const v34 (_ BitVec 1))
  (define-const v35 ((_ zero_extend 64) v32))
  (define-const v36 (bvadd v35 #x0000000000000000ffffffffffffffef))
  (define-const v37 (bvadd v36 #x00000000000000000000000000000001))
  (define-const v38 ((_ sign_extend 64) v32))
  (define-const v39 (bvadd v38 #xffffffffffffffffffffffffffffffef))
  (define-const v40 (bvadd v39 #x00000000000000000000000000000001))
  (define-const v41 ((_ extract 63 0) v37))
  (define-const v42 ((_ extract 0 0) (bvlshr v41 ((_ extract 63 0) #x0000000000000000000000000000003f))))
  (define-const v43 (bvor (bvand #b0 (bvshl #b0 ((_ extract 0 0) #x0000000000000000))) (bvshl ((_ zero_extend 0) v42) ((_ extract 0 0) #x0000000000000000))))
  (define-const v44 (eq v41 #x0000000000000000))
  (assert v44)
  (define-const v45 ((_ zero_extend 64) v41))
  (define-const v46 (eq v45 v37))
  (assert (not v46))
  (define-const v47 ((_ sign_extend 64) v41))
  (define-const v48 (eq v47 v40))
  (assert v48)
  (define-const v49 (concat v43 #b1))
  (define-const v50 (concat v49 #b1))
  (define-const v51 (concat v50 #b0))
  (declare-const v52 (_ BitVec 4))
  (define-const v53 (eq v8 #b0))
  (assert v53)
  (define-const v54 v41))

(events
  (write-reg |SEE| (_ bv-1 128))
  (write-reg |PSTATE| (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (write-reg |__v85_implemented| false)
  (read-reg |SP_EL2| nil v26)
  (write-reg |SP_EL2| v27)
  (read-reg |SEE| nil (_ bv-1 128))
  (write-reg |SEE| (_ bv1393 128))
  (write-reg |__unconditional| true)
  (read-reg |__v85_implemented| nil false)
  (read-reg |PSTATE| ((_ field |SP|)) (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (read-reg |SP_EL0| nil v31)
  (read-reg |PSTATE| ((_ field |SP|)) (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (write-reg |SP_EL0| v54))
(formula
  (declare-const v0 (_ BitVec 2))
  (declare-const v1 (_ BitVec 1))
  (declare-const v2 (_ BitVec 1))
  (declare-const v3 (_ BitVec 1))
  (declare-const v4 (_ BitVec 1))
  (declare-const v5 (_ BitVec 1))
  (declare-const v6 (_ BitVec 1))
  (declare-const v7 (_ BitVec 2))
  (declare-const v8 (_ BitVec 1))
  (declare-const v9 (_ BitVec 1))
  (declare-const v10 (_ BitVec 1))
  (declare-const v11 (_ BitVec 1))
  (declare-const v12 (_ BitVec 1))
  (declare-const v13 (_ BitVec 1))
  (declare-const v14 (_ BitVec 1))
  (declare-const v15 (_ BitVec 1))
  (declare-const v16 (_ BitVec 1))
  (declare-const v17 (_ BitVec 1))
  (declare-const v18 (_ BitVec 5))
  (declare-const v19 (_ BitVec 1))
  (declare-const v20 (_ BitVec 4))
  (declare-const v21 (_ BitVec 8))
  (declare-const v22 (_ BitVec 1))
  (declare-const v23 (_ BitVec 1))
  (declare-const v24 (_ BitVec 1))
  (declare-const v25 (_ BitVec 1))
  (declare-const v26 (_ BitVec 64))
  (define-const v27 (bvor v26 #x000000000000ffff))
  (declare-const v28 (_ BitVec 64))
  (declare-const v29 (_ BitVec 64))
  (define-const v30 (eq v8 #b0))
  (assert v30)
  (declare-const v31 (_ BitVec 64))
  (define-const v32 ((_ extract 63 0) v31))
  (declare-const v33 (_ BitVec 4))
  (declare-const v34 (_ BitVec 1))
  (define-const v35 ((_ zero_extend 64) v32))
  (define-const v36 (bvadd v35 #x0000000000000000ffffffffffffffef))
  (define-const v37 (bvadd v36 #x00000000000000000000000000000001))
  (define-const v38 ((_ sign_extend 64) v32))
  (define-const v39 (bvadd v38 #xffffffffffffffffffffffffffffffef))
  (define-const v40 (bvadd v39 #x00000000000000000000000000000001))
  (define-const v41 ((_ extract 63 0) v37))
  (define-const v42 ((_ extract 0 0) (bvlshr v41 ((_ extract 63 0) #x0000000000000000000000000000003f))))
  (define-const v43 (bvor (bvand #b0 (bvshl #b0 ((_ extract 0 0) #x0000000000000000))) (bvshl ((_ zero_extend 0) v42) ((_ extract 0 0) #x0000000000000000))))
  (define-const v44 (eq v41 #x0000000000000000))
  (assert (not v44))
  (define-const v45 ((_ zero_extend 64) v41))
  (define-const v46 (eq v45 v37))
  (assert v46)
  (define-const v47 ((_ sign_extend 64) v41))
  (define-const v48 (eq v47 v40))
  (assert v48)
  (define-const v49 (concat v43 #b0))
  (define-const v50 (concat v49 #b0))
  (define-const v51 (concat v50 #b0))
  (declare-const v52 (_ BitVec 4))
  (define-const v53 (eq v8 #b0))
  (assert v53)
  (define-const v54 v41))

(events
  (write-reg |SEE| (_ bv-1 128))
  (write-reg |PSTATE| (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (write-reg |__v85_implemented| false)
  (read-reg |SP_EL2| nil v26)
  (write-reg |SP_EL2| v27)
  (read-reg |SEE| nil (_ bv-1 128))
  (write-reg |SEE| (_ bv1393 128))
  (write-reg |__unconditional| true)
  (read-reg |__v85_implemented| nil false)
  (read-reg |PSTATE| ((_ field |SP|)) (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (read-reg |SP_EL0| nil v31)
  (read-reg |PSTATE| ((_ field |SP|)) (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (write-reg |SP_EL0| v54))
(formula
  (declare-const v0 (_ BitVec 2))
  (declare-const v1 (_ BitVec 1))
  (declare-const v2 (_ BitVec 1))
  (declare-const v3 (_ BitVec 1))
  (declare-const v4 (_ BitVec 1))
  (declare-const v5 (_ BitVec 1))
  (declare-const v6 (_ BitVec 1))
  (declare-const v7 (_ BitVec 2))
  (declare-const v8 (_ BitVec 1))
  (declare-const v9 (_ BitVec 1))
  (declare-const v10 (_ BitVec 1))
  (declare-const v11 (_ BitVec 1))
  (declare-const v12 (_ BitVec 1))
  (declare-const v13 (_ BitVec 1))
  (declare-const v14 (_ BitVec 1))
  (declare-const v15 (_ BitVec 1))
  (declare-const v16 (_ BitVec 1))
  (declare-const v17 (_ BitVec 1))
  (declare-const v18 (_ BitVec 5))
  (declare-const v19 (_ BitVec 1))
  (declare-const v20 (_ BitVec 4))
  (declare-const v21 (_ BitVec 8))
  (declare-const v22 (_ BitVec 1))
  (declare-const v23 (_ BitVec 1))
  (declare-const v24 (_ BitVec 1))
  (declare-const v25 (_ BitVec 1))
  (declare-const v26 (_ BitVec 64))
  (define-const v27 (bvor v26 #x000000000000ffff))
  (declare-const v28 (_ BitVec 64))
  (declare-const v29 (_ BitVec 64))
  (define-const v30 (eq v8 #b0))
  (assert v30)
  (declare-const v31 (_ BitVec 64))
  (define-const v32 ((_ extract 63 0) v31))
  (declare-const v33 (_ BitVec 4))
  (declare-const v34 (_ BitVec 1))
  (define-const v35 ((_ zero_extend 64) v32))
  (define-const v36 (bvadd v35 #x0000000000000000ffffffffffffffef))
  (define-const v37 (bvadd v36 #x00000000000000000000000000000001))
  (define-const v38 ((_ sign_extend 64) v32))
  (define-const v39 (bvadd v38 #xffffffffffffffffffffffffffffffef))
  (define-const v40 (bvadd v39 #x00000000000000000000000000000001))
  (define-const v41 ((_ extract 63 0) v37))
  (define-const v42 ((_ extract 0 0) (bvlshr v41 ((_ extract 63 0) #x0000000000000000000000000000003f))))
  (define-const v43 (bvor (bvand #b0 (bvshl #b0 ((_ extract 0 0) #x0000000000000000))) (bvshl ((_ zero_extend 0) v42) ((_ extract 0 0) #x0000000000000000))))
  (define-const v44 (eq v41 #x0000000000000000))
  (assert (not v44))
  (define-const v45 ((_ zero_extend 64) v41))
  (define-const v46 (eq v45 v37))
  (assert (not v46))
  (define-const v47 ((_ sign_extend 64) v41))
  (define-const v48 (eq v47 v40))
  (assert v48)
  (define-const v49 (concat v43 #b0))
  (define-const v50 (concat v49 #b1))
  (define-const v51 (concat v50 #b0))
  (declare-const v52 (_ BitVec 4))
  (define-const v53 (eq v8 #b0))
  (assert v53)
  (define-const v54 v41))

(events
  (write-reg |SEE| (_ bv-1 128))
  (write-reg |PSTATE| (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (write-reg |__v85_implemented| false)
  (read-reg |SP_EL2| nil v26)
  (write-reg |SP_EL2| v27)
  (read-reg |SEE| nil (_ bv-1 128))
  (write-reg |SEE| (_ bv1393 128))
  (write-reg |__unconditional| true)
  (read-reg |__v85_implemented| nil false)
  (read-reg |PSTATE| ((_ field |SP|)) (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (read-reg |SP_EL0| nil v31)
  (read-reg |PSTATE| ((_ field |SP|)) (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (write-reg |SP_EL0| v54))
(formula
  (declare-const v0 (_ BitVec 2))
  (declare-const v1 (_ BitVec 1))
  (declare-const v2 (_ BitVec 1))
  (declare-const v3 (_ BitVec 1))
  (declare-const v4 (_ BitVec 1))
  (declare-const v5 (_ BitVec 1))
  (declare-const v6 (_ BitVec 1))
  (declare-const v7 (_ BitVec 2))
  (declare-const v8 (_ BitVec 1))
  (declare-const v9 (_ BitVec 1))
  (declare-const v10 (_ BitVec 1))
  (declare-const v11 (_ BitVec 1))
  (declare-const v12 (_ BitVec 1))
  (declare-const v13 (_ BitVec 1))
  (declare-const v14 (_ BitVec 1))
  (declare-const v15 (_ BitVec 1))
  (declare-const v16 (_ BitVec 1))
  (declare-const v17 (_ BitVec 1))
  (declare-const v18 (_ BitVec 5))
  (declare-const v19 (_ BitVec 1))
  (declare-const v20 (_ BitVec 4))
  (declare-const v21 (_ BitVec 8))
  (declare-const v22 (_ BitVec 1))
  (declare-const v23 (_ BitVec 1))
  (declare-const v24 (_ BitVec 1))
  (declare-const v25 (_ BitVec 1))
  (declare-const v26 (_ BitVec 64))
  (define-const v27 (bvor v26 #x000000000000ffff))
  (declare-const v28 (_ BitVec 64))
  (declare-const v29 (_ BitVec 64))
  (define-const v30 (eq v8 #b0))
  (assert v30)
  (declare-const v31 (_ BitVec 64))
  (define-const v32 ((_ extract 63 0) v31))
  (declare-const v33 (_ BitVec 4))
  (declare-const v34 (_ BitVec 1))
  (define-const v35 ((_ zero_extend 64) v32))
  (define-const v36 (bvadd v35 #x0000000000000000ffffffffffffffef))
  (define-const v37 (bvadd v36 #x00000000000000000000000000000001))
  (define-const v38 ((_ sign_extend 64) v32))
  (define-const v39 (bvadd v38 #xffffffffffffffffffffffffffffffef))
  (define-const v40 (bvadd v39 #x00000000000000000000000000000001))
  (define-const v41 ((_ extract 63 0) v37))
  (define-const v42 ((_ extract 0 0) (bvlshr v41 ((_ extract 63 0) #x0000000000000000000000000000003f))))
  (define-const v43 (bvor (bvand #b0 (bvshl #b0 ((_ extract 0 0) #x0000000000000000))) (bvshl ((_ zero_extend 0) v42) ((_ extract 0 0) #x0000000000000000))))
  (define-const v44 (eq v41 #x0000000000000000))
  (assert (not v44))
  (define-const v45 ((_ zero_extend 64) v41))
  (define-const v46 (eq v45 v37))
  (assert (not v46))
  (define-const v47 ((_ sign_extend 64) v41))
  (define-const v48 (eq v47 v40))
  (assert (not v48))
  (define-const v49 (concat v43 #b0))
  (define-const v50 (concat v49 #b1))
  (define-const v51 (concat v50 #b1))
  (declare-const v52 (_ BitVec 4))
  (define-const v53 (eq v8 #b0))
  (assert v53)
  (define-const v54 v41))

(events
  (write-reg |SEE| (_ bv-1 128))
  (write-reg |PSTATE| (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (write-reg |__v85_implemented| false)
  (read-reg |SP_EL2| nil v26)
  (write-reg |SP_EL2| v27)
  (read-reg |SEE| nil (_ bv-1 128))
  (write-reg |SEE| (_ bv1393 128))
  (write-reg |__unconditional| true)
  (read-reg |__v85_implemented| nil false)
  (read-reg |PSTATE| ((_ field |SP|)) (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (read-reg |SP_EL0| nil v31)
  (read-reg |PSTATE| ((_ field |SP|)) (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (write-reg |SP_EL0| v54))
(formula
  (declare-const v0 (_ BitVec 2))
  (declare-const v1 (_ BitVec 1))
  (declare-const v2 (_ BitVec 1))
  (declare-const v3 (_ BitVec 1))
  (declare-const v4 (_ BitVec 1))
  (declare-const v5 (_ BitVec 1))
  (declare-const v6 (_ BitVec 1))
  (declare-const v7 (_ BitVec 2))
  (declare-const v8 (_ BitVec 1))
  (declare-const v9 (_ BitVec 1))
  (declare-const v10 (_ BitVec 1))
  (declare-const v11 (_ BitVec 1))
  (declare-const v12 (_ BitVec 1))
  (declare-const v13 (_ BitVec 1))
  (declare-const v14 (_ BitVec 1))
  (declare-const v15 (_ BitVec 1))
  (declare-const v16 (_ BitVec 1))
  (declare-const v17 (_ BitVec 1))
  (declare-const v18 (_ BitVec 5))
  (declare-const v19 (_ BitVec 1))
  (declare-const v20 (_ BitVec 4))
  (declare-const v21 (_ BitVec 8))
  (declare-const v22 (_ BitVec 1))
  (declare-const v23 (_ BitVec 1))
  (declare-const v24 (_ BitVec 1))
  (declare-const v25 (_ BitVec 1))
  (declare-const v26 (_ BitVec 64))
  (define-const v27 (bvor v26 #x000000000000ffff))
  (declare-const v28 (_ BitVec 64))
  (declare-const v29 (_ BitVec 64))
  (define-const v30 (eq v8 #b0))
  (assert (not v30))
  (define-const v31 ((_ extract 63 0) v27))
  (declare-const v32 (_ BitVec 4))
  (declare-const v33 (_ BitVec 1))
  (define-const v34 ((_ zero_extend 64) v31))
  (define-const v35 (bvadd v34 #x0000000000000000ffffffffffffffef))
  (define-const v36 (bvadd v35 #x00000000000000000000000000000001))
  (define-const v37 ((_ sign_extend 64) v31))
  (define-const v38 (bvadd v37 #xffffffffffffffffffffffffffffffef))
  (define-const v39 (bvadd v38 #x00000000000000000000000000000001))
  (define-const v40 ((_ extract 63 0) v36))
  (define-const v41 ((_ extract 0 0) (bvlshr v40 ((_ extract 63 0) #x0000000000000000000000000000003f))))
  (define-const v42 (bvor (bvand #b0 (bvshl #b0 ((_ extract 0 0) #x0000000000000000))) (bvshl ((_ zero_extend 0) v41) ((_ extract 0 0) #x0000000000000000))))
  (define-const v43 (eq v40 #x0000000000000000))
  (assert (not v43))
  (define-const v44 ((_ zero_extend 64) v40))
  (define-const v45 (eq v44 v36))
  (assert (not v45))
  (define-const v46 ((_ sign_extend 64) v40))
  (define-const v47 (eq v46 v39))
  (assert v47)
  (define-const v48 (concat v42 #b0))
  (define-const v49 (concat v48 #b1))
  (define-const v50 (concat v49 #b0))
  (declare-const v51 (_ BitVec 4))
  (define-const v52 (eq v8 #b0))
  (assert (not v52))
  (define-const v53 v40))

(events
  (write-reg |SEE| (_ bv-1 128))
  (write-reg |PSTATE| (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (write-reg |__v85_implemented| false)
  (read-reg |SP_EL2| nil v26)
  (write-reg |SP_EL2| v27)
  (read-reg |SEE| nil (_ bv-1 128))
  (write-reg |SEE| (_ bv1393 128))
  (write-reg |__unconditional| true)
  (read-reg |__v85_implemented| nil false)
  (read-reg |PSTATE| ((_ field |SP|)) (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (read-reg |PSTATE| ((_ field |EL|)) (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (read-reg |EL0| nil #b00)
  (read-reg |EL1| nil #b01)
  (read-reg |EL2| nil #b10)
  (read-reg |SP_EL2| nil v27)
  (read-reg |PSTATE| ((_ field |SP|)) (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (read-reg |PSTATE| ((_ field |EL|)) (_ struct (|PAN| v3) (|SSBS| v19) (|E| v2) (|I| v11) (|Z| v13) (|DIT| v4) (|Q| v5) (|J| v6) (|D| v15) (|A| v16) (|IL| v1) (|SP| v8) (|V| v12) (|IT| v21) (|N| v22) (|C| v17) (|EL| #b10) (|SS| v9) (|M| v18) (|T| v10) (|GE| v20) (|F| v23) (|TCO| v24) (|UAO| v25) (|nRW| v14) (|BTYPE| v0)))
  (read-reg |EL0| nil #b00)
  (read-reg |EL1| nil #b01)
  (read-reg |EL2| nil #b10)
  (write-reg |SP_EL2| v53))
ok
