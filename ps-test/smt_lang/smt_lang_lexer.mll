(* generated by Ott 0.30 from: smt_lang.ott *)
{
open Smt_lang_parser
exception Error of string
}

rule token = parse
| [' ' '\t']
    { token lexbuf }
| '
'
   { Lexing.new_line lexbuf; token lexbuf }
| "//" [^'\n']* '\n'
    { Lexing.new_line lexbuf; token lexbuf }
| eof
    { EOF }
| "Vec_bool"
    { VEC_UNDERSCORE_BOOL }
| "Bits64"
    { BITS_SIX_FOUR }
| "SignExtend"
    { SIGNEXTEND }
| "ZeroExtend"
    { ZEROEXTEND }
| "Bvredand"
    { BVREDAND }
| "Bvredor"
    { BVREDOR }
| "Extract"
    { EXTRACT }
| "BitVec"
    { BITVEC }
| "Bvashr"
    { BVASHR }
| "Bvlshr"
    { BVLSHR }
| "Bvnand"
    { BVNAND }
| "Bvsdiv"
    { BVSDIV }
| "Bvsmod"
    { BVSMOD }
| "Bvsrem"
    { BVSREM }
| "Bvudiv"
    { BVUDIV }
| "Bvurem"
    { BVUREM }
| "Bvxnor"
    { BVXNOR }
| "Concat"
    { CONCAT }
| "("
    { LPAREN }
| ")"
    { RPAREN }
| "Bool"
    { BOOL1 }
| "bool"
    { BOOL2 }
| "Bvadd"
    { BVADD }
| "Bvand"
    { BVAND }
| "Bvmul"
    { BVMUL }
| "Bvneg"
    { BVNEG }
| "Bvnor"
    { BVNOR }
| "Bvnot"
    { BVNOT }
| "Bvsge"
    { BVSGE }
| "Bvsgt"
    { BVSGT }
| "Bvshl"
    { BVSHL }
| "Bvsle"
    { BVSLE }
| "Bvslt"
    { BVSLT }
| "Bvsub"
    { BVSUB }
| "Bvuge"
    { BVUGE }
| "Bvugt"
    { BVUGT }
| "Bvule"
    { BVULE }
| "Bvult"
    { BVULT }
| "Bvxor"
    { BVXOR }
| ","
    { COMMA }
| "Bits"
    { BITS }
| "Bvor"
    { BVOR }
| "And"
    { AND }
| "Ite"
    { ITE }
| "Neq"
    { NEQ }
| "Not"
    { NOT }
| "Var"
    { VAR }
| "Eq"
    { EQ }
| "Or"
    { OR }
| ['0'-'9''a'-'f'] as u32
    { U_THREE_TWO (u32) }
| ['0'-'9''a'-'f'] as u64
    { U_SIX_FOUR (u64) }
| _
    { raise (Error (Printf.sprintf "At offset %d: unexpected character.\n" (Lexing.lexeme_start lexbuf))) }


{
}

