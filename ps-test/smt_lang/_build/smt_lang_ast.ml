(* generated by Ott 0.30 from: smt_lang.ott *)

type u32 = int
type vu32 = string
type u64 = string
type bvi = string
type bv = string
type name = string
type j = int

type 
bool = 
   True
 | False


type 
accessor = 
   Field of name


type 
ty = 
   Ty_Bool
 | Ty_BitVec of u32


type 
exp = 
   Var of vu32
 | Bits of bv
 | Bool of bool
 | Eq of exp * exp
 | Neq of exp * exp
 | And of exp * exp
 | Or of exp * exp
 | Not of exp
 | Bvnot of exp
 | Bvredand of exp
 | Bvredor of exp
 | Bvand of exp * exp
 | Bvor of exp * exp
 | Bvxor of exp * exp
 | Bvnand of exp * exp
 | Bvnor of exp * exp
 | Bvxnor of exp * exp
 | Bvneg of exp
 | Bvadd of exp * exp
 | Bvsub of exp * exp
 | Bvmul of exp * exp
 | Bvudiv of exp * exp
 | Bvsdiv of exp * exp
 | Bvurem of exp * exp
 | Bvsrem of exp * exp
 | Bvsmod of exp * exp
 | Bvult of exp * exp
 | Bvslt of exp * exp
 | Bvule of exp * exp
 | Bvsle of exp * exp
 | Bvuge of exp * exp
 | Bvsge of exp * exp
 | Bvugt of exp * exp
 | Bvsgt of exp * exp
 | Extract of u32 * u32 * exp
 | ZeroExtend of u32 * exp
 | SignExtend of u32 * exp
 | Bvshl of exp * exp
 | Bvlshr of exp * exp
 | Bvashr of exp * exp
 | Concat of exp * exp
 | Ite of exp * exp * exp


type 
valu = 
   Val_Symbolic of vu32
 | Val_I64 of bvi
 | Val_I128 of bvi
 | Val_Bool of bool
 | Val_Bits of bv
 | Val_String
 | Val_Unit
 | Val_Vector of (valu) list
 | Val_List of (valu) list
 | Val_Struct of (struct_element) list
 | Val_Poison

and struct_element = 
   Struct_elem of name * valu


type 
accessor_list = 
   Nil
 | Cons of (accessor) list


type 
def = 
   DeclareConst of vu32 * ty
 | DefineConst of vu32 * exp
 | Assert of exp


type 
event = 
   ReadReg of name * accessor_list * valu
 | WriteReg of name * valu


type 
term = 
   Def of def
 | Event of event
 | Top of (def) list * (event) list



