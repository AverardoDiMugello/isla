(* generated by Ott 0.30 from: smt_lang.ott *)
open PPrintEngine
open PPrintCombinators
open Smt_lang_ast

let rec pp_raw_u32 x =  string "\"" ^^ string x ^^ string "\""

and pp_raw_u64 x =  string "\"" ^^ string x ^^ string "\""

and pp_raw_ty x = match x with
| Ty_Bool -> string "Ty_Bool"
| Ty_BitVec(u32) -> string "Ty_BitVec" ^^ string "(" ^^ pp_raw_u32 u32 ^^ string ")"

and pp_raw_exp x = match x with
| Var(u32) -> string "Var" ^^ string "(" ^^ pp_raw_u32 u32 ^^ string ")"
| Bits -> string "Bits"
| Bits64(u64,u32) -> string "Bits64" ^^ string "(" ^^ pp_raw_u64 u64 ^^ string "," ^^ pp_raw_u32 u32 ^^ string ")"
| Bool -> string "Bool"
| Eq(exp,exp_prime) -> string "Eq" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Neq(exp,exp_prime) -> string "Neq" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| And(exp,exp_prime) -> string "And" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Or(exp,exp_prime) -> string "Or" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Not(exp) -> string "Not" ^^ string "(" ^^ pp_raw_exp exp ^^ string ")"
| Bvnot(exp) -> string "Bvnot" ^^ string "(" ^^ pp_raw_exp exp ^^ string ")"
| Bvredand(exp) -> string "Bvredand" ^^ string "(" ^^ pp_raw_exp exp ^^ string ")"
| Bvredor(exp) -> string "Bvredor" ^^ string "(" ^^ pp_raw_exp exp ^^ string ")"
| Bvand(exp,exp_prime) -> string "Bvand" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvor(exp,exp_prime) -> string "Bvor" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvxor(exp,exp_prime) -> string "Bvxor" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvnand(exp,exp_prime) -> string "Bvnand" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvnor(exp,exp_prime) -> string "Bvnor" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvxnor(exp,exp_prime) -> string "Bvxnor" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvneg(exp) -> string "Bvneg" ^^ string "(" ^^ pp_raw_exp exp ^^ string ")"
| Bvadd(exp,exp_prime) -> string "Bvadd" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvsub(exp,exp_prime) -> string "Bvsub" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvmul(exp,exp_prime) -> string "Bvmul" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvudiv(exp,exp_prime) -> string "Bvudiv" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvsdiv(exp,exp_prime) -> string "Bvsdiv" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvurem(exp,exp_prime) -> string "Bvurem" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvsrem(exp,exp_prime) -> string "Bvsrem" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvsmod(exp,exp_prime) -> string "Bvsmod" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvult(exp,exp_prime) -> string "Bvult" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvslt(exp,exp_prime) -> string "Bvslt" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvule(exp,exp_prime) -> string "Bvule" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvsle(exp,exp_prime) -> string "Bvsle" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvuge(exp,exp_prime) -> string "Bvuge" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvsge(exp,exp_prime) -> string "Bvsge" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvugt(exp,exp_prime) -> string "Bvugt" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvsgt(exp,exp_prime) -> string "Bvsgt" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Extract(u32,u32_prime,exp_prime_prime) -> string "Extract" ^^ string "(" ^^ pp_raw_u32 u32 ^^ string "," ^^ pp_raw_u32 u32_prime ^^ string "," ^^ pp_raw_exp exp_prime_prime ^^ string ")"
| ZeroExtend(u32,exp_prime) -> string "ZeroExtend" ^^ string "(" ^^ pp_raw_u32 u32 ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| SignExtend(u32,exp_prime) -> string "SignExtend" ^^ string "(" ^^ pp_raw_u32 u32 ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvshl(exp,exp_prime) -> string "Bvshl" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvlshr(exp,exp_prime) -> string "Bvlshr" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Bvashr(exp,exp_prime) -> string "Bvashr" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Concat(exp,exp_prime) -> string "Concat" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string ")"
| Ite(exp,exp_prime,exp_prime_prime) -> string "Ite" ^^ string "(" ^^ pp_raw_exp exp ^^ string "," ^^ pp_raw_exp exp_prime ^^ string "," ^^ pp_raw_exp exp_prime_prime ^^ string ")"


let rec pp_u32 x = string x ^^ string ""

and pp_u64 x = string x ^^ string ""

and pp_ty x = match x with
| Ty_Bool -> string "Bool"
| Ty_BitVec(u32) -> group(string "" ^^ string "BitVec" ^^ break 1 ^^ string "(" ^^ break 1 ^^ pp_u32 u32 ^^ break 1 ^^ string ")" ^^ string "")

and pp_exp x = match x with
| Var(u32) -> group(string "" ^^ string "Var" ^^ break 1 ^^ string "(" ^^ break 1 ^^ pp_u32 u32 ^^ break 1 ^^ string ")" ^^ string "")
| Bits -> group(string "" ^^ string "Bits" ^^ break 1 ^^ string "(" ^^ break 1 ^^ string "Vec_bool" ^^ break 1 ^^ string ")" ^^ string "")
| Bits64(u64,u32) -> group(string "" ^^ string "Bits64" ^^ break 1 ^^ string "(" ^^ break 1 ^^ pp_u64 u64 ^^ break 1 ^^ string "," ^^ break 1 ^^ pp_u32 u32 ^^ break 1 ^^ string ")" ^^ string "")
| Bool -> group(string "" ^^ string "Bool" ^^ break 1 ^^ string "(" ^^ break 1 ^^ string "bool" ^^ break 1 ^^ string ")" ^^ string "")
| Eq(exp,exp_prime) -> group(string "" ^^ string "Eq" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Neq(exp,exp_prime) -> group(string "" ^^ string "Neq" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| And(exp,exp_prime) -> group(string "" ^^ string "And" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Or(exp,exp_prime) -> group(string "" ^^ string "Or" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Not(exp) -> group(string "" ^^ string "Not" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string ")" ^^ string "")
| Bvnot(exp) -> group(string "" ^^ string "Bvnot" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string ")" ^^ string "")
| Bvredand(exp) -> group(string "" ^^ string "Bvredand" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string ")" ^^ string "")
| Bvredor(exp) -> group(string "" ^^ string "Bvredor" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string ")" ^^ string "")
| Bvand(exp,exp_prime) -> group(string "" ^^ string "Bvand" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvor(exp,exp_prime) -> group(string "" ^^ string "Bvor" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvxor(exp,exp_prime) -> group(string "" ^^ string "Bvxor" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvnand(exp,exp_prime) -> group(string "" ^^ string "Bvnand" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvnor(exp,exp_prime) -> group(string "" ^^ string "Bvnor" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvxnor(exp,exp_prime) -> group(string "" ^^ string "Bvxnor" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvneg(exp) -> group(string "" ^^ string "Bvneg" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string ")" ^^ string "")
| Bvadd(exp,exp_prime) -> group(string "" ^^ string "Bvadd" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvsub(exp,exp_prime) -> group(string "" ^^ string "Bvsub" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvmul(exp,exp_prime) -> group(string "" ^^ string "Bvmul" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvudiv(exp,exp_prime) -> group(string "" ^^ string "Bvudiv" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvsdiv(exp,exp_prime) -> group(string "" ^^ string "Bvsdiv" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvurem(exp,exp_prime) -> group(string "" ^^ string "Bvurem" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvsrem(exp,exp_prime) -> group(string "" ^^ string "Bvsrem" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvsmod(exp,exp_prime) -> group(string "" ^^ string "Bvsmod" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvult(exp,exp_prime) -> group(string "" ^^ string "Bvult" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvslt(exp,exp_prime) -> group(string "" ^^ string "Bvslt" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvule(exp,exp_prime) -> group(string "" ^^ string "Bvule" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvsle(exp,exp_prime) -> group(string "" ^^ string "Bvsle" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvuge(exp,exp_prime) -> group(string "" ^^ string "Bvuge" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvsge(exp,exp_prime) -> group(string "" ^^ string "Bvsge" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvugt(exp,exp_prime) -> group(string "" ^^ string "Bvugt" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvsgt(exp,exp_prime) -> group(string "" ^^ string "Bvsgt" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Extract(u32,u32_prime,exp_prime_prime) -> group(string "" ^^ string "Extract" ^^ break 1 ^^ string "(" ^^ break 1 ^^ pp_u32 u32 ^^ break 1 ^^ string "," ^^ break 1 ^^ pp_u32 u32_prime ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime_prime) ^^ break 1 ^^ string ")" ^^ string "")
| ZeroExtend(u32,exp_prime) -> group(string "" ^^ string "ZeroExtend" ^^ break 1 ^^ string "(" ^^ break 1 ^^ pp_u32 u32 ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| SignExtend(u32,exp_prime) -> group(string "" ^^ string "SignExtend" ^^ break 1 ^^ string "(" ^^ break 1 ^^ pp_u32 u32 ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvshl(exp,exp_prime) -> group(string "" ^^ string "Bvshl" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvlshr(exp,exp_prime) -> group(string "" ^^ string "Bvlshr" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Bvashr(exp,exp_prime) -> group(string "" ^^ string "Bvashr" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Concat(exp,exp_prime) -> group(string "" ^^ string "Concat" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string ")" ^^ string "")
| Ite(exp,exp_prime,exp_prime_prime) -> group(string "" ^^ string "Ite" ^^ break 1 ^^ string "(" ^^ break 1 ^^ nest 2 (pp_exp exp) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime) ^^ break 1 ^^ string "," ^^ break 1 ^^ nest 2 (pp_exp exp_prime_prime) ^^ break 1 ^^ string ")" ^^ string "")

